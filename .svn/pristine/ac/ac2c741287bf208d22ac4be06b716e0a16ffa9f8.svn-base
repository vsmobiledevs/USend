package com.usend.database;

import java.lang.System;

@kotlin.Metadata(mv = {1, 4, 0}, bv = {1, 0, 3}, k = 1, d1 = {"\u00002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010 \n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\t\n\u0002\b\u0003\b&\u0018\u0000*\u0004\b\u0000\u0010\u00012\u00020\u0002B\r\u0012\u0006\u0010\u0003\u001a\u00020\u0004\u00a2\u0006\u0002\u0010\u0005J\u0015\u0010\b\u001a\u00020\t2\u0006\u0010\n\u001a\u00028\u0000H\'\u00a2\u0006\u0002\u0010\u000bJ\u0016\u0010\b\u001a\u00020\t2\f\u0010\n\u001a\b\u0012\u0004\u0012\u00028\u00000\fH\'J\f\u0010\r\u001a\b\u0012\u0004\u0012\u00028\u00000\fJ\u0016\u0010\u000e\u001a\b\u0012\u0004\u0012\u00028\u00000\f2\u0006\u0010\u000f\u001a\u00020\u0010H\'J\u0015\u0010\u0011\u001a\u00020\u00122\u0006\u0010\n\u001a\u00028\u0000H\'\u00a2\u0006\u0002\u0010\u0013J\u0016\u0010\u0011\u001a\u00020\t2\f\u0010\n\u001a\b\u0012\u0004\u0012\u00028\u00000\fH\'J\u0015\u0010\u0014\u001a\u00020\t2\u0006\u0010\n\u001a\u00028\u0000H\'\u00a2\u0006\u0002\u0010\u000bR\u0011\u0010\u0003\u001a\u00020\u0004\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0006\u0010\u0007\u00a8\u0006\u0015"}, d2 = {"Lcom/usend/database/GenericDao;", "T", "", "tableName", "", "(Ljava/lang/String;)V", "getTableName", "()Ljava/lang/String;", "deleteData", "", "entity", "(Ljava/lang/Object;)V", "", "getAll", "getAllData", "query", "Landroidx/sqlite/db/SupportSQLiteQuery;", "insertData", "", "(Ljava/lang/Object;)J", "updateData", "app_debug"})
public abstract class GenericDao<T extends java.lang.Object> {
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String tableName = null;
    
    @androidx.room.Insert(onConflict = androidx.room.OnConflictStrategy.REPLACE)
    public abstract long insertData(T entity);
    
    @androidx.room.Insert(onConflict = androidx.room.OnConflictStrategy.REPLACE)
    @androidx.room.Transaction()
    public abstract void insertData(@org.jetbrains.annotations.NotNull()
    java.util.List<? extends T> entity);
    
    @androidx.room.Update()
    public abstract void updateData(T entity);
    
    @androidx.room.Delete()
    public abstract void deleteData(T entity);
    
    @androidx.room.Delete()
    public abstract void deleteData(@org.jetbrains.annotations.NotNull()
    java.util.List<? extends T> entity);
    
    @org.jetbrains.annotations.NotNull()
    public final java.util.List<T> getAll() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    @androidx.room.RawQuery()
    public abstract java.util.List<T> getAllData(@org.jetbrains.annotations.NotNull()
    androidx.sqlite.db.SupportSQLiteQuery query);
    
    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getTableName() {
        return null;
    }
    
    public GenericDao(@org.jetbrains.annotations.NotNull()
    java.lang.String tableName) {
        super();
    }
}