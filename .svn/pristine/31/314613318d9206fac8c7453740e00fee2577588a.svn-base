// Generated by data binding compiler. Do not edit!
package com.usend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.chauthai.swipereveallayout.SwipeRevealLayout;
import com.google.android.material.card.MaterialCardView;
import com.usend.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RowItemNotiBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView cardMain;

  @NonNull
  public final FrameLayout flDelete;

  @NonNull
  public final FrameLayout flFront;

  @NonNull
  public final AppCompatImageView imgDelete;

  @NonNull
  public final SwipeRevealLayout swipe;

  @NonNull
  public final AppCompatTextView txtDate;

  @NonNull
  public final AppCompatTextView txtNoti;

  @Bindable
  protected Boolean mIsRead;

  protected RowItemNotiBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView cardMain, FrameLayout flDelete, FrameLayout flFront,
      AppCompatImageView imgDelete, SwipeRevealLayout swipe, AppCompatTextView txtDate,
      AppCompatTextView txtNoti) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardMain = cardMain;
    this.flDelete = flDelete;
    this.flFront = flFront;
    this.imgDelete = imgDelete;
    this.swipe = swipe;
    this.txtDate = txtDate;
    this.txtNoti = txtNoti;
  }

  public abstract void setIsRead(@Nullable Boolean isRead);

  @Nullable
  public Boolean getIsRead() {
    return mIsRead;
  }

  @NonNull
  public static RowItemNotiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_item_noti, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RowItemNotiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RowItemNotiBinding>inflateInternal(inflater, R.layout.row_item_noti, root, attachToRoot, component);
  }

  @NonNull
  public static RowItemNotiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_item_noti, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RowItemNotiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RowItemNotiBinding>inflateInternal(inflater, R.layout.row_item_noti, null, false, component);
  }

  public static RowItemNotiBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RowItemNotiBinding bind(@NonNull View view, @Nullable Object component) {
    return (RowItemNotiBinding)bind(component, view, R.layout.row_item_noti);
  }
}
