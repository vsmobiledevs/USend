// Generated by data binding compiler. Do not edit!
package com.usend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.chauthai.swipereveallayout.SwipeRevealLayout;
import com.google.android.material.card.MaterialCardView;
import com.usend.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RowShippingAddressItemBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView cvMain;

  @NonNull
  public final FrameLayout flDelete;

  @NonNull
  public final FrameLayout flFront;

  @NonNull
  public final AppCompatImageView imgDelete;

  @NonNull
  public final AppCompatImageView imgEdit;

  @NonNull
  public final SwipeRevealLayout swipe;

  @NonNull
  public final AppCompatTextView txtAddress;

  @NonNull
  public final AppCompatTextView txtLabel;

  @NonNull
  public final AppCompatTextView txtReceiverName;

  @Bindable
  protected Boolean mIsSelected;

  protected RowShippingAddressItemBinding(Object _bindingComponent, View _root,
      int _localFieldCount, MaterialCardView cvMain, FrameLayout flDelete, FrameLayout flFront,
      AppCompatImageView imgDelete, AppCompatImageView imgEdit, SwipeRevealLayout swipe,
      AppCompatTextView txtAddress, AppCompatTextView txtLabel, AppCompatTextView txtReceiverName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cvMain = cvMain;
    this.flDelete = flDelete;
    this.flFront = flFront;
    this.imgDelete = imgDelete;
    this.imgEdit = imgEdit;
    this.swipe = swipe;
    this.txtAddress = txtAddress;
    this.txtLabel = txtLabel;
    this.txtReceiverName = txtReceiverName;
  }

  public abstract void setIsSelected(@Nullable Boolean isSelected);

  @Nullable
  public Boolean getIsSelected() {
    return mIsSelected;
  }

  @NonNull
  public static RowShippingAddressItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_shipping_address_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RowShippingAddressItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RowShippingAddressItemBinding>inflateInternal(inflater, R.layout.row_shipping_address_item, root, attachToRoot, component);
  }

  @NonNull
  public static RowShippingAddressItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_shipping_address_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RowShippingAddressItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RowShippingAddressItemBinding>inflateInternal(inflater, R.layout.row_shipping_address_item, null, false, component);
  }

  public static RowShippingAddressItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RowShippingAddressItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (RowShippingAddressItemBinding)bind(component, view, R.layout.row_shipping_address_item);
  }
}
