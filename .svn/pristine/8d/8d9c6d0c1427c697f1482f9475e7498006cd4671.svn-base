package com.usend.views.home

import android.content.Context
import android.content.Intent
import android.util.Log
import android.webkit.WebView
import android.webkit.WebViewClient
import androidx.lifecycle.Observer
import com.base.network.model.CmsPageResponse
import com.usend.R
import com.usend.comman.Resource
import com.usend.base.ViewModelActivity
import com.usend.databinding.ActivityWebViewBinding
import com.usend.extensions.nullSafe
import com.usend.extensions.showToast
import com.usend.utils.CommonUtils
import com.usend.utils.SLUG
import com.usend.utils.TITLE
import com.usend.viewmodels.ContentPageViewModel
import kotlinx.android.synthetic.main.app_toolbar.*
import kotlin.reflect.KClass

class WebViewActivity(override val modelClass: KClass<ContentPageViewModel> = ContentPageViewModel::class,
                      override val layoutId: Int = R.layout.activity_web_view) : ViewModelActivity<ActivityWebViewBinding, ContentPageViewModel>() {

    private lateinit var title : String
    private lateinit var slug : String
    private lateinit var webView: WebView

    private val TAG = WebViewActivity::class.java.simpleName

    override fun getDataFromIntent() {
        super.getDataFromIntent()

        if(intent.hasExtra(TITLE)) {
            title = intent.getStringExtra(TITLE)
            slug = intent.getStringExtra(SLUG)
        }
    }

    override fun initView() {
        super.initView()

        initToolbar(toolbar = toolbar, title = title)

        viewModel.getContentPage(slug)

        webView = findViewById(R.id.webView)
        webView?.webViewClient = WebViewClient()
        webView?.settings?.javaScriptEnabled = true
        webView?.settings?.builtInZoomControls = true

        //webView.loadData(resources.getString(R.string.lbl_lorem_ipsum), "text/html", "UTF-8")
    }

    override fun initControls() {
        super.initControls()
    }

    override fun addObserver() {
       viewModel.status.observe(this,mObserver)
    }

    private val mObserver = Observer<Any> { response ->
        when (response) {
            is Resource.Error<*> -> {

                Log.e(TAG, "Message: ${response.data}")

                showToast(response.message.toString())
            }
            is Resource.UnAuthorisedRequest<*> -> {
                showTokenExpiredDialog(resources.getString(R.string.lbl_session_expired_msg))
            }
            is Resource.Success<*> -> {

                response.data as CmsPageResponse

                webView.loadData(response.data.responseData?.cmsPage?.content, "text/html", "UTF-8")
                //webView.loadUrl("https://photozuri.thecloudtutorialusers.com/#/main/homepage")

            }
            is Resource.Loading<*> -> {

                response.isLoadingShow.let {
                    if (it as Boolean) {
                        showProgressDialog(this)
                    } else {
                        hideProgressDialog()
                    }
                }
            }
            is Resource.NoInternetError<*> -> {
                // use if you wanna show dialog or snackbar
                CommonUtils.showOkDialog(this, message = resources.getString(response.id!!))
            }

            is Resource.ValidationError<*> -> {
                showToast(resources.getString(response.id.nullSafe()))
            }
            is Resource.UnAuthorisedRequest<*> -> {
                showTokenExpiredDialog(resources.getString(R.string.lbl_session_expired_msg))
            }
        }
    }

    companion object {
        fun newIntent(context: Context, intent: Intent) {
            context.startActivity(intent)
        }
    }
}