// Generated by data binding compiler. Do not edit!
package com.usend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.usend.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentConciergeForSubscriptionBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView cvCancel;

  @NonNull
  public final MaterialCardView cvMain;

  @NonNull
  public final MaterialCardView cvRetrive;

  @NonNull
  public final AppCompatTextView txtBackMsg;

  @NonNull
  public final AppCompatTextView txtClick;

  @NonNull
  public final AppCompatTextView txtClickBack;

  @NonNull
  public final AppCompatTextView txtUpgradeMsg;

  @NonNull
  public final AppCompatTextView txtUpgradePlan;

  @NonNull
  public final AppCompatTextView txtcancel;

  @NonNull
  public final AppCompatTextView txtmonthPrice;

  @NonNull
  public final AppCompatTextView txtmonthStart;

  @NonNull
  public final AppCompatTextView txtmonthly;

  protected FragmentConciergeForSubscriptionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, MaterialCardView cvCancel, MaterialCardView cvMain,
      MaterialCardView cvRetrive, AppCompatTextView txtBackMsg, AppCompatTextView txtClick,
      AppCompatTextView txtClickBack, AppCompatTextView txtUpgradeMsg,
      AppCompatTextView txtUpgradePlan, AppCompatTextView txtcancel,
      AppCompatTextView txtmonthPrice, AppCompatTextView txtmonthStart,
      AppCompatTextView txtmonthly) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cvCancel = cvCancel;
    this.cvMain = cvMain;
    this.cvRetrive = cvRetrive;
    this.txtBackMsg = txtBackMsg;
    this.txtClick = txtClick;
    this.txtClickBack = txtClickBack;
    this.txtUpgradeMsg = txtUpgradeMsg;
    this.txtUpgradePlan = txtUpgradePlan;
    this.txtcancel = txtcancel;
    this.txtmonthPrice = txtmonthPrice;
    this.txtmonthStart = txtmonthStart;
    this.txtmonthly = txtmonthly;
  }

  @NonNull
  public static FragmentConciergeForSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_concierge_for_subscription, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentConciergeForSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentConciergeForSubscriptionBinding>inflateInternal(inflater, R.layout.fragment_concierge_for_subscription, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentConciergeForSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_concierge_for_subscription, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentConciergeForSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentConciergeForSubscriptionBinding>inflateInternal(inflater, R.layout.fragment_concierge_for_subscription, null, false, component);
  }

  public static FragmentConciergeForSubscriptionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentConciergeForSubscriptionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentConciergeForSubscriptionBinding)bind(component, view, R.layout.fragment_concierge_for_subscription);
  }
}
