// Generated by data binding compiler. Do not edit!
package com.usend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.usend.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityShippingCostBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout linhishide;

  @NonNull
  public final RecyclerView rvShippingCost;

  @NonNull
  public final RecyclerView rvShippingCostFilter;

  @NonNull
  public final ShimmerFrameLayout simmerLayout;

  @NonNull
  public final View toolbarShippingCost;

  @Bindable
  protected Boolean mIsEmpty;

  protected ActivityShippingCostBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout linhishide, RecyclerView rvShippingCost, RecyclerView rvShippingCostFilter,
      ShimmerFrameLayout simmerLayout, View toolbarShippingCost) {
    super(_bindingComponent, _root, _localFieldCount);
    this.linhishide = linhishide;
    this.rvShippingCost = rvShippingCost;
    this.rvShippingCostFilter = rvShippingCostFilter;
    this.simmerLayout = simmerLayout;
    this.toolbarShippingCost = toolbarShippingCost;
  }

  public abstract void setIsEmpty(@Nullable Boolean isEmpty);

  @Nullable
  public Boolean getIsEmpty() {
    return mIsEmpty;
  }

  @NonNull
  public static ActivityShippingCostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_shipping_cost, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityShippingCostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityShippingCostBinding>inflateInternal(inflater, R.layout.activity_shipping_cost, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityShippingCostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_shipping_cost, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityShippingCostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityShippingCostBinding>inflateInternal(inflater, R.layout.activity_shipping_cost, null, false, component);
  }

  public static ActivityShippingCostBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityShippingCostBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityShippingCostBinding)bind(component, view, R.layout.activity_shipping_cost);
  }
}
