// Generated by data binding compiler. Do not edit!
package com.usend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.button.MaterialButton;
import com.usend.R;
import com.usend.adapter.ExtraServicesItemAdapter;
import com.usend.views.home.ShippingDetailsActivity;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityShippingDetailsBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final AppCompatEditText edtContentOfPackage;

  @NonNull
  public final AppCompatEditText edtDeclaredValues;

  @NonNull
  public final AppCompatEditText edtNotes;

  @NonNull
  public final AppCompatImageView imgShipping;

  @NonNull
  public final LinearLayout llCustoms;

  @NonNull
  public final RecyclerView rvExtraServices;

  @NonNull
  public final View toolbarShippingDetails;

  @NonNull
  public final AppCompatTextView txtAdditionalFees;

  @NonNull
  public final AppCompatTextView txtAdditionalFeesTitle;

  @NonNull
  public final AppCompatTextView txtAddress;

  @NonNull
  public final AppCompatTextView txtAvailability;

  @NonNull
  public final AppCompatTextView txtCarrierFees;

  @NonNull
  public final AppCompatTextView txtCarrierFeesTitle;

  @NonNull
  public final AppCompatTextView txtChangeShippingAddress;

  @NonNull
  public final AppCompatTextView txtChangeShippingMethod;

  @NonNull
  public final AppCompatTextView txtContentofPackage;

  @NonNull
  public final AppCompatTextView txtDeclaredValuesTitle;

  @NonNull
  public final AppCompatTextView txtExtraCharges;

  @NonNull
  public final AppCompatTextView txtInvoiceDetails;

  @NonNull
  public final AppCompatTextView txtNotesTitle;

  @NonNull
  public final AppCompatTextView txtProcessFees;

  @NonNull
  public final AppCompatTextView txtProcessFessTitle;

  @NonNull
  public final AppCompatTextView txtServiceTitle;

  @NonNull
  public final AppCompatTextView txtShippingAddress;

  @NonNull
  public final AppCompatTextView txtShippingCharges;

  @NonNull
  public final AppCompatTextView txtShippingMethod;

  @NonNull
  public final AppCompatTextView txtShippingMethodName;

  @NonNull
  public final AppCompatTextView txtTimeToShipped;

  @NonNull
  public final AppCompatTextView txtTotalCharges;

  @NonNull
  public final AppCompatTextView txtTotalChargesTitle;

  @Bindable
  protected ExtraServicesItemAdapter mAdapter;

  @Bindable
  protected ShippingDetailsActivity mActivity;

  protected ActivityShippingDetailsBinding(Object _bindingComponent, View _root,
      int _localFieldCount, MaterialButton btnNext, AppCompatEditText edtContentOfPackage,
      AppCompatEditText edtDeclaredValues, AppCompatEditText edtNotes,
      AppCompatImageView imgShipping, LinearLayout llCustoms, RecyclerView rvExtraServices,
      View toolbarShippingDetails, AppCompatTextView txtAdditionalFees,
      AppCompatTextView txtAdditionalFeesTitle, AppCompatTextView txtAddress,
      AppCompatTextView txtAvailability, AppCompatTextView txtCarrierFees,
      AppCompatTextView txtCarrierFeesTitle, AppCompatTextView txtChangeShippingAddress,
      AppCompatTextView txtChangeShippingMethod, AppCompatTextView txtContentofPackage,
      AppCompatTextView txtDeclaredValuesTitle, AppCompatTextView txtExtraCharges,
      AppCompatTextView txtInvoiceDetails, AppCompatTextView txtNotesTitle,
      AppCompatTextView txtProcessFees, AppCompatTextView txtProcessFessTitle,
      AppCompatTextView txtServiceTitle, AppCompatTextView txtShippingAddress,
      AppCompatTextView txtShippingCharges, AppCompatTextView txtShippingMethod,
      AppCompatTextView txtShippingMethodName, AppCompatTextView txtTimeToShipped,
      AppCompatTextView txtTotalCharges, AppCompatTextView txtTotalChargesTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnNext = btnNext;
    this.edtContentOfPackage = edtContentOfPackage;
    this.edtDeclaredValues = edtDeclaredValues;
    this.edtNotes = edtNotes;
    this.imgShipping = imgShipping;
    this.llCustoms = llCustoms;
    this.rvExtraServices = rvExtraServices;
    this.toolbarShippingDetails = toolbarShippingDetails;
    this.txtAdditionalFees = txtAdditionalFees;
    this.txtAdditionalFeesTitle = txtAdditionalFeesTitle;
    this.txtAddress = txtAddress;
    this.txtAvailability = txtAvailability;
    this.txtCarrierFees = txtCarrierFees;
    this.txtCarrierFeesTitle = txtCarrierFeesTitle;
    this.txtChangeShippingAddress = txtChangeShippingAddress;
    this.txtChangeShippingMethod = txtChangeShippingMethod;
    this.txtContentofPackage = txtContentofPackage;
    this.txtDeclaredValuesTitle = txtDeclaredValuesTitle;
    this.txtExtraCharges = txtExtraCharges;
    this.txtInvoiceDetails = txtInvoiceDetails;
    this.txtNotesTitle = txtNotesTitle;
    this.txtProcessFees = txtProcessFees;
    this.txtProcessFessTitle = txtProcessFessTitle;
    this.txtServiceTitle = txtServiceTitle;
    this.txtShippingAddress = txtShippingAddress;
    this.txtShippingCharges = txtShippingCharges;
    this.txtShippingMethod = txtShippingMethod;
    this.txtShippingMethodName = txtShippingMethodName;
    this.txtTimeToShipped = txtTimeToShipped;
    this.txtTotalCharges = txtTotalCharges;
    this.txtTotalChargesTitle = txtTotalChargesTitle;
  }

  public abstract void setAdapter(@Nullable ExtraServicesItemAdapter adapter);

  @Nullable
  public ExtraServicesItemAdapter getAdapter() {
    return mAdapter;
  }

  public abstract void setActivity(@Nullable ShippingDetailsActivity activity);

  @Nullable
  public ShippingDetailsActivity getActivity() {
    return mActivity;
  }

  @NonNull
  public static ActivityShippingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_shipping_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityShippingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityShippingDetailsBinding>inflateInternal(inflater, R.layout.activity_shipping_details, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityShippingDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_shipping_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityShippingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityShippingDetailsBinding>inflateInternal(inflater, R.layout.activity_shipping_details, null, false, component);
  }

  public static ActivityShippingDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityShippingDetailsBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityShippingDetailsBinding)bind(component, view, R.layout.activity_shipping_details);
  }
}
