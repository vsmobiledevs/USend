// Generated by data binding compiler. Do not edit!
package com.usend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.button.MaterialButton;
import com.usend.R;
import com.usend.adapter.ShipToAddressItemAdapter;
import com.usend.views.home.ShipToAddressActivity;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityShipToAddressBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final RecyclerView rvShipAddresses;

  @NonNull
  public final View toolbarShipToAddress;

  @Bindable
  protected ShipToAddressItemAdapter mAdapter;

  @Bindable
  protected ShipToAddressActivity mActivity;

  protected ActivityShipToAddressBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton btnNext, RecyclerView rvShipAddresses, View toolbarShipToAddress) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnNext = btnNext;
    this.rvShipAddresses = rvShipAddresses;
    this.toolbarShipToAddress = toolbarShipToAddress;
  }

  public abstract void setAdapter(@Nullable ShipToAddressItemAdapter adapter);

  @Nullable
  public ShipToAddressItemAdapter getAdapter() {
    return mAdapter;
  }

  public abstract void setActivity(@Nullable ShipToAddressActivity activity);

  @Nullable
  public ShipToAddressActivity getActivity() {
    return mActivity;
  }

  @NonNull
  public static ActivityShipToAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_ship_to_address, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityShipToAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityShipToAddressBinding>inflateInternal(inflater, R.layout.activity_ship_to_address, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityShipToAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_ship_to_address, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityShipToAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityShipToAddressBinding>inflateInternal(inflater, R.layout.activity_ship_to_address, null, false, component);
  }

  public static ActivityShipToAddressBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityShipToAddressBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityShipToAddressBinding)bind(component, view, R.layout.activity_ship_to_address);
  }
}
